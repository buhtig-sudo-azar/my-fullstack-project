#!/bin/bash

CONTAINER_NAME="my-frontend"
PORT=1234

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–Ω—ã–π –¥–≤–∏–∂–æ–∫
detect_container_engine() {
    if command -v podman >/dev/null 2>&1; then
        echo "podman"
    elif command -v docker >/dev/null 2>&1; then
        echo "docker"
    else
        echo "none"
    fi
}

CONTAINER_ENGINE=$(detect_container_engine)

if [ "$CONTAINER_ENGINE" = "none" ]; then
    echo "‚ùå –û—à–∏–±–∫–∞: –ù–µ –Ω–∞–π–¥–µ–Ω –Ω–∏ Podman, –Ω–∏ Docker. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –Ω–∏—Ö."
    echo "üìñ –°—Å—ã–ª–∫–∏ –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏:"
    echo "   Podman: https://podman.io/"
    echo "   Docker: https://docs.docker.com/engine/install/"
    exit 1
fi

echo "‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–Ω—ã–π –¥–≤–∏–∂–æ–∫: $CONTAINER_ENGINE"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –±—Ä–∞—É–∑–µ—Ä–∞ –≤ —Ä–∞–∑–Ω—ã—Ö –û–°
open_browser() {
    local url=$1
    echo "üåê –ü–æ–ø—ã—Ç–∫–∞ –æ—Ç–∫—Ä—ã—Ç—å –±—Ä–∞—É–∑–µ—Ä —Å URL: $url"

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ WSL (Windows Subsystem for Linux)
    if command -v wsl >/dev/null 2>&1 && grep -qEi "(Microsoft|WSL)" /proc/version &> /dev/null; then
        echo "ü™ü –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ WSL (Windows Subsystem for Linux)"
        
        if command -v wslview >/dev/null 2>&1; then
            echo "   –ü—ã—Ç–∞—é—Å—å –æ—Ç–∫—Ä—ã—Ç—å —á–µ—Ä–µ–∑ wslview..."
            if wslview "$url"; then return; fi
        fi
        
        if command -v powershell.exe >/dev/null 2>&1; then
            echo "   –ü—ã—Ç–∞—é—Å—å –æ—Ç–∫—Ä—ã—Ç—å —á–µ—Ä–µ–∑ PowerShell..."
            powershell.exe /c start "$url" && return
        fi
        
        echo "   –ü—ã—Ç–∞—é—Å—å –æ—Ç–∫—Ä—ã—Ç—å —á–µ—Ä–µ–∑ explorer.exe..."
        explorer.exe "$(wslpath -w "$url")" && return

        echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å –±—Ä–∞—É–∑–µ—Ä –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏"
        echo "üîó –û—Ç–∫—Ä–æ–π—Ç–µ –≤—Ä—É—á–Ω—É—é: $url"

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ macOS
    elif [[ "$OSTYPE" == "darwin"* ]]; then
        echo "üçé –û—Ç–∫—Ä—ã–≤–∞—é –±—Ä–∞—É–∑–µ—Ä –≤ macOS..."
        open "$url"

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ Linux
    elif [[ "$OSTYPE" == "linux-gnu"* ]]; then
        echo "üêß –û—Ç–∫—Ä—ã–≤–∞—é –±—Ä–∞—É–∑–µ—Ä –≤ Linux..."
        
        if ! command -v xdg-open >/dev/null 2>&1; then
            echo "üì¶ xdg-open –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—ã—Ç–∞—é—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å xdg-utils..."
            
            if command -v apt-get >/dev/null 2>&1; then
                sudo apt-get update && sudo apt-get install -y xdg-utils
                if ! command -v xdg-open >/dev/null 2>&1; then
                    echo "‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ xdg-utils"
                    echo "üîó –û—Ç–∫—Ä–æ–π—Ç–µ –±—Ä–∞—É–∑–µ—Ä –≤—Ä—É—á–Ω—É—é: $url"
                    return
                fi
            else
                echo "‚ùå –ü–∞–∫–µ—Ç–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä apt-get –Ω–µ –Ω–∞–π–¥–µ–Ω"
                echo "üîó –û—Ç–∫—Ä–æ–π—Ç–µ –±—Ä–∞—É–∑–µ—Ä –≤—Ä—É—á–Ω—É—é: $url"
                return
            fi
        fi
        
        xdg-open "$url"

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ Windows (Git Bash/Cygwin)
    elif [[ "$OSTYPE" == "msys" || "$OSTYPE" == "cygwin" ]]; then
        echo "ü™ü –û—Ç–∫—Ä—ã–≤–∞—é –±—Ä–∞—É–∑–µ—Ä –≤ Windows (gitbash/cygwin)..."
        cmd.exe /c start "" "$url"

    else
        echo "‚ùì –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –û–°"
        echo "üîó –û—Ç–∫—Ä–æ–π—Ç–µ —Å—Å—ã–ª–∫—É –≤—Ä—É—á–Ω—É—é: $url"
    fi
}

echo ""
echo "üì¶ === –°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –æ–±—Ä–∞–∑–æ–≤ ==="
$CONTAINER_ENGINE images --format "table {{.Repository}}\t{{.Tag}}\t{{.ID}}\t{{.Size}}"
echo ""

echo "üê≥ === –¢–µ–∫—É—â–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã (–∑–∞–ø—É—â–µ–Ω–Ω—ã–µ –∏ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ) ==="
$CONTAINER_ENGINE ps -a --format "table {{.Names}}\t{{.Status}}\t{{.Ports}}"
echo ""

# –ó–∞–ø—Ä–æ—Å –∏–º–µ–Ω–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
read -p "üìù –í–≤–µ–¥–∏—Ç–µ –∏–º—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é \"$CONTAINER_NAME\"): " input_name
if [ -n "$input_name" ]; then
    CONTAINER_NAME=$input_name
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏–º
if $CONTAINER_ENGINE ps -a --format '{{.Names}}' | grep -Eq "^${CONTAINER_NAME}\$"; then
    STATUS=$($CONTAINER_ENGINE inspect --format '{{.State.Status}}' $CONTAINER_NAME 2>/dev/null)
    
    if [ "$STATUS" = "running" ]; then
        echo "‚úÖ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä $CONTAINER_NAME —É–∂–µ –∑–∞–ø—É—â–µ–Ω."
    else
        echo "üöÄ –ó–∞–ø—É—Å–∫–∞—é –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä $CONTAINER_NAME..."
        $CONTAINER_ENGINE start $CONTAINER_NAME
    fi
else
    echo "üõ†Ô∏è –°–æ–∑–¥–∞—é –∏ –∑–∞–ø—É—Å–∫–∞—é –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä $CONTAINER_NAME..."
    $CONTAINER_ENGINE run -d \
        --name $CONTAINER_NAME \
        -p $PORT:$PORT \
        -v "$(pwd)/frontend:/app" \
        -w /app \
        node:18-alpine \
        sh -c "npm install && npm start"
fi

echo ""

# –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ URL –¥–ª—è –¥–æ—Å—Ç—É–ø–∞
URL="http://localhost:$PORT"

# –û—Å–æ–±—ã–π —Å–ª—É—á–∞–π –¥–ª—è WSL - –∏—Å–ø–æ–ª—å–∑—É–µ–º IP WSL –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ —Å Windows
if command -v wsl >/dev/null 2>&1 && grep -qEi "(Microsoft|WSL)" /proc/version &> /dev/null; then
    WIN_IP=$(wsl hostname -I | awk '{print $1}')
    if [[ -n "$WIN_IP" ]]; then
        URL="http://${WIN_IP}:$PORT"
        echo "üåê WSL –æ–±–Ω–∞—Ä—É–∂–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º IP: $WIN_IP"
    else
        echo "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å IP WSL, –∏—Å–ø–æ–ª—å–∑—É–µ–º localhost"
    fi
fi

echo "üîó –§—Ä–æ–Ω—Ç–µ–Ω–¥ –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: $URL"
echo ""

# –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –æ—Ç–∫—Ä—ã—Ç—å –±—Ä–∞—É–∑–µ—Ä
read -p "üåê –û—Ç–∫—Ä—ã—Ç—å –±—Ä–∞—É–∑–µ—Ä –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏? (y/n) [n]: " open_resp
open_resp=${open_resp:-n}

if [[ $open_resp =~ ^[Yy]$ ]]; then
    open_browser "$URL"
else
    echo "‚è≠Ô∏è –û—Ç–∫—Ä—ã—Ç–∏–µ –±—Ä–∞—É–∑–µ—Ä–∞ –ø—Ä–æ–ø—É—â–µ–Ω–æ."
fi

echo ""
echo "üìã –ö–æ–º–∞–Ω–¥—ã –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–º:"
echo "   ‚èπÔ∏è  –û—Å—Ç–∞–Ω–æ–≤–∫–∞:    $CONTAINER_ENGINE stop $CONTAINER_NAME"
echo "   üóëÔ∏è  –£–¥–∞–ª–µ–Ω–∏–µ:     $CONTAINER_ENGINE rm $CONTAINER_NAME"
echo "   üìú –õ–æ–≥–∏:         $CONTAINER_ENGINE logs -f $CONTAINER_NAME"
echo "   üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫:   $CONTAINER_ENGINE restart $CONTAINER_NAME"
echo ""

echo "üì¢ –ó–∞–ø—É—Å–∫–∞—é –ø—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ (–¥–ª—è –≤—ã—Ö–æ–¥–∞: Ctrl+C)..."
echo ""

# –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤
$CONTAINER_ENGINE logs -f $CONTAINER_NAME